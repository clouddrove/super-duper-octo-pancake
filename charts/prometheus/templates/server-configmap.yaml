{{- if .Values.server.enabled -}}
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    {{- include "prometheus.server.labels" . | nindent 4 }}
  name: {{ template "prometheus.server.fullname" . }}
  namespace: {{ .Values.namespace }}
data:
{{- $root := . -}}
{{- range $key, $value := .Values.serverFiles }}
  {{ $key }}: |
{{- if eq $key "alerts" }}
{{- if and (not (empty $value)) (empty $value.groups) }}
    groups:
{{- range $ruleKey, $ruleValue := $value }}
    - name: {{ $ruleKey -}}.rules
      rules:
{{ $ruleValue | toYaml | trimSuffix "\n" | indent 6 }}
{{- end }}
{{- else }}
{{ toYaml $value | indent 4 }}
{{- end }}
{{- else }}
{{ toYaml $value | default "{}" | indent 4 }}
{{- end }}
  prometheus.yml: |
    global:
       scrape_interval:     15s
       evaluation_interval: 15s
    rule_files:
      - /etc/config/infrastructure-alerts.yml
      - /etc/config/applications-alerts.yml
      - /etc/config/database-alerts.yml
    alerting:
      alertmanagers:
      - static_configs:
        - targets:
          - {{ template "prometheus.alertmanager.fullname" $ }}:80
    scrape_configs:
      - job_name: prometheus
        static_configs:
          - targets:
            - localhost:9090
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
          - role: service
        scheme: https
        tls_config:
          ca_file: /tmp/ca.crt
          insecure_skip_verify: true
        bearer_token_file: /tmp/token
        relabel_configs:
        - separator: ;
          regex: (.*)
          target_label: __address__
          replacement: {{ $root.Values.kubernetesendpoint }}:443
          action: replace
      - job_name: 'kubernetes-nodes'
        scheme: https
        kubernetes_sd_configs:
        - role: node
          api_server: https://{{ $root.Values.kubernetesendpoint }}:443
          tls_config:
            ca_file: /tmp/ca.crt
            insecure_skip_verify: true
          bearer_token_file: /tmp/token
        tls_config:
          ca_file: /tmp/ca.crt
          insecure_skip_verify: true
        bearer_token_file: /tmp/token
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: {{ $root.Values.kubernetesendpoint }}:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/$1/proxy/metrics
      - job_name: 'kubernetes-nodes-cadvisor'
        scheme: https
        kubernetes_sd_configs:
        - role: node
          api_server: https://{{ $root.Values.kubernetesendpoint }}:443
          tls_config:
            ca_file: /tmp/ca.crt
            insecure_skip_verify: true
          bearer_token_file: /tmp/token
        tls_config:
          ca_file: /tmp/ca.crt
          insecure_skip_verify: true
        bearer_token_file: /tmp/token
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement:  {{ $root.Values.kubernetesendpoint }}:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
        - role: pod
          api_server: https://{{ $root.Values.kubernetesendpoint }}:443
          tls_config:
            ca_file: /tmp/ca.crt
            insecure_skip_verify: true
          bearer_token_file: /tmp/token
        tls_config:
          ca_file: /tmp/ca.crt
          insecure_skip_verify: true
        bearer_token_file: /tmp/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name
{{- end }}
{{- end }}
